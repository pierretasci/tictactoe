@import '../colors';
@import '../_media';

$borderWidth: 5px;
$intendedRadius: 3px;
$borderColor: $darkBrown;

@mixin square-border-x {
	@for $i from 0 through 8 {
		@include desktop {
			$borderWidth: 5px;
			.square-#{$i} {
				border: 0;
				border-style: solid;
				border-color: $borderColor;
				@if($i > 2) {
					border-top-width: $borderWidth;
				}

				@if(($i + 1) % 3 != 0) {
					border-right-width: $borderWidth;
				}

				@if($i < 6) {
					border-bottom-width: $borderWidth;
				}

				@if($i % 3 != 0) {
					border-left-width: $borderWidth;
				}

				// === Now the radiuses ===
				
				// @if($i < 5 and $i != 2) {
				// 	border-bottom-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 0 and $i < 6 and $i != 3) {
				// 	border-bottom-left-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 2 and $i < 8 and $i != 5) {
				// 	border-top-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 3 and $i != 6) {
				// 	border-top-left-radius: $borderWidth + $intendedRadius;
				// }
			}
		}

		@include defaultSize {
			$borderWidth: 4px;
			.square-#{$i} {
				border: 0;
				border-style: solid;
				border-color: $borderColor;
				@if($i > 2) {
					border-top-width: $borderWidth;
				}

				@if(($i + 1) % 3 != 0) {
					border-right-width: $borderWidth;
				}

				@if($i < 6) {
					border-bottom-width: $borderWidth;
				}

				@if($i % 3 != 0) {
					border-left-width: $borderWidth;
				}

				// === Now the radiuses ===
				
				// @if($i < 5 and $i != 2) {
				// 	border-bottom-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 0 and $i < 6 and $i != 3) {
				// 	border-bottom-left-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 2 and $i < 8 and $i != 5) {
				// 	border-top-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 3 and $i != 6) {
				// 	border-top-left-radius: $borderWidth + $intendedRadius;
				// }
			}
		}

		@include tablets {
			$borderWidth: 3px;
			.square-#{$i} {
				border: 0;
				border-style: solid;
				border-color: $borderColor;
				@if($i > 2) {
					border-top-width: $borderWidth;
				}

				@if(($i + 1) % 3 != 0) {
					border-right-width: $borderWidth;
				}

				@if($i < 6) {
					border-bottom-width: $borderWidth;
				}

				@if($i % 3 != 0) {
					border-left-width: $borderWidth;
				}

				// === Now the radiuses ===
				
				// @if($i < 5 and $i != 2) {
				// 	border-bottom-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 0 and $i < 6 and $i != 3) {
				// 	border-bottom-left-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 2 and $i < 8 and $i != 5) {
				// 	border-top-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 3 and $i != 6) {
				// 	border-top-left-radius: $borderWidth + $intendedRadius;
				// }
			}
		}

		@include phones {
			$borderWidth: 2px;
			.square-#{$i} {
				border: 0;
				border-style: solid;
				border-color: $borderColor;
				@if($i > 2) {
					border-top-width: $borderWidth;
				}

				@if(($i + 1) % 3 != 0) {
					border-right-width: $borderWidth;
				}

				@if($i < 6) {
					border-bottom-width: $borderWidth;
				}

				@if($i % 3 != 0) {
					border-left-width: $borderWidth;
				}

				// === Now the radiuses ===
				
				// @if($i < 5 and $i != 2) {
				// 	border-bottom-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 0 and $i < 6 and $i != 3) {
				// 	border-bottom-left-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 2 and $i < 8 and $i != 5) {
				// 	border-top-right-radius: $borderWidth + $intendedRadius;
				// }

				// @if($i > 3 and $i != 6) {
				// 	border-top-left-radius: $borderWidth + $intendedRadius;
				// }
			}
		}
	}
}

@include square-border-x;

.board-wrapper {
	margin-top: 2em;
	margin-bottom: 2em;

	.board {
		display: flex;
		flex-wrap: wrap;
		margin: 0 auto;
		position: relative;
		background-color: $lightBrown;

		@include desktop {
			width: $desktop / 3;
		}

		@include defaultSize {
			width: $defaultSize / 3;
		}

		@include tablets {
			width: $tablets / 3;
		}

		@include phones {
			width: $phones / 3;
		}

		.board-cover {
			position: absolute;
			top: 25%;
			left: 25%;
			width: 50%;
			height: 50%;
			background-color: $darkBrown;
			z-index: -1;
		}

		.square {
			flex: 1;
			flex-basis: 33%;
			padding: 2em;
			cursor: pointer;
			background-color: $lightBrown;

			.game-piece {
				width: 100%;
				height: 100%;

				&:not(.active) {
					pointer-events: none;
				}

				&.human {
					background: url('/images/x.svg');
					background-repeat: no-repeat;
					background-size: 75%;
					background-position: center;
				}

				&.computer {
					background: url('/images/o.svg');
					background-repeat: no-repeat;
					background-size: 75%;
					background-position: center;
				}
			}

			@include desktop {
				height: $desktop / 9;
			}

			@include defaultSize {
				height: $defaultSize / 9;
			}

			@include tablets {
				height: $tablets / 9;
			}

			@include phones {
				height: $phones / 9;
			}
		}

		&.computer .square:hover .game-piece.active {
				background: url('/images/o.svg');
				background-repeat: no-repeat;
				background-size: 75%;
				background-position: center;
				opacity: 0.5;
		}

		&.human .square:hover .game-piece.active {
				background: url('/images/x.svg');
				background-repeat: no-repeat;
				background-size: 75%;
				background-position: center;
				opacity: 0.5;
		}

		.loading {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: $backgroundGrey;
		}
	}
}